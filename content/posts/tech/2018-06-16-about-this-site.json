{
  "title": "Nuxt.js + MDLなブログ(記事はmarkdown製)を立ち上げました",
  "created": "2018-06-16T00:00:00.000Z",
  "bodyContent": "## 経緯\n\n技術ブログを以前から書いておきたいと思っていました。\n\nちょっと調べただけで素晴らしいサイト、仕組み(はてなブログやCMS、JekyllやHugoといったSSG等)は多数見つかったのですが、自分で１から作成したいと思い起ち、作成するに至りました。\n\n## 何故思い起ったのか\n\n- Nuxt.jsに触れてみたかった\n\n    Javaのサーバサイドエンジニアなので意図して触れない限り疎遠なフロントエンドの世界。\n\n    最近様々なJSフレームワークが台頭してるようですが、その内の一つ、Vue.jsに触れたことがなかったので触ってみようと思った。\n\n- サイトを1から組む体験がしたかった\n\n    レイアウトや仕組み等、1から自分で考えて作ったものでないと愛着がわかない性格なのと、自分で組み上げ、公開する体験がしたかったから。\n\n## 実現した事(当サイトの仕組み)\n\n1. Markdownで記事を書く\n\n    [processmd](https://www.npmjs.com/package/processmd)を使用しました。\n\n    サマリファイル出力や見出し作成機能が非常に便利でした。が…(後述\b)\n\n1. Nuxt.jsの動的ルーティングで自動収集\n\n1. Nuxt.jsの静的ファイル生成で静的な形にする\n\n1. GithubPagesにホスティング\n\n## 引っかかった事\n\n- Nuxt.jsわからん問題\n\n    Vuexやnuxt.config.jsの記法等々で悩まされました。\bこれについては経験値をあげるしかない。\n\n- GithubPagesへのデプロイ問題\n\n    - 何故かmanifest.js等々を読み込まん！\n\n        build時に\bdistに作成される.nojekyllファイルが必要だったと\bいうたった1つの過ちに行き着くまでに軽く1,2時間は費やした。。。\b\n\n        StackOverflowにそのままズバリなページがあって助かりました。\n        https://stackoverflow.com/questions/49986185/github-pages-error\n- Markdownのリンクが有効にならない\n\n    この記事を書いてて気づいたのですが、リンクの記載があってもただの文字列として変換されてしまっていました。\n    そして、processmdのオプションでpreset名を与えても有効にできる手段が見つからず。。\n\n    結局レンダリング時にmarkdown-itを呼び直して自前でやっています。こんな感じに。\n\n    ```javascript\n    asyncData({params}){\n        const moduleUrl = params.path.replace(/_/g, '/') + '/' + params.url;\n        const post = Object.assign({}, require(`~/${moduleUrl}.json`), moduleUrl);\n        const md = require('markdown-it')({linkify: true}).use(require('markdown-it-highlightjs'));\n        post.parseHtml = md.render(post.bodyContent); // 意味ねぇ！\n        return post;\n    },\n    ```\n\n## 今後の展望\n\n- 記事のカテゴリ化\n\n    ページ右側が寂しいので、そこにカテゴリ一覧の表示をしたい\n\n- 記事の充実\n\n    ソーシャル活動を今まで一切して来ていないせいで、記事を書く\b労力がすごい(語彙)。\n\n## 参考にさせて頂いたページ\n\n- https://jmblog.jp/posts/2018-01-17/build-a-blog-with-nuxtjs-and-markdown-1/\n- https://qiita.com/ainehanta/items/8918593f3a28dfb25ddf",
  "bodyHtml": "<h2>経緯</h2>\n<p>技術ブログを以前から書いておきたいと思っていました。</p>\n<p>ちょっと調べただけで素晴らしいサイト、仕組み(はてなブログやCMS、JekyllやHugoといったSSG等)は多数見つかったのですが、自分で１から作成したいと思い起ち、作成するに至りました。</p>\n<h2>何故思い起ったのか</h2>\n<ul>\n<li>\n<p>Nuxt.jsに触れてみたかった</p>\n<p>Javaのサーバサイドエンジニアなので意図して触れない限り疎遠なフロントエンドの世界。</p>\n<p>最近様々なJSフレームワークが台頭してるようですが、その内の一つ、Vue.jsに触れたことがなかったので触ってみようと思った。</p>\n</li>\n<li>\n<p>サイトを1から組む体験がしたかった</p>\n<p>レイアウトや仕組み等、1から自分で考えて作ったものでないと愛着がわかない性格なのと、自分で組み上げ、公開する体験がしたかったから。</p>\n</li>\n</ul>\n<h2>実現した事(当サイトの仕組み)</h2>\n<ol>\n<li>\n<p>Markdownで記事を書く</p>\n<p><a href=\"https://www.npmjs.com/package/processmd\">processmd</a>を使用しました。</p>\n<p>サマリファイル出力や見出し作成機能が非常に便利でした。が…(後述\b)</p>\n</li>\n<li>\n<p>Nuxt.jsの動的ルーティングで自動収集</p>\n</li>\n<li>\n<p>Nuxt.jsの静的ファイル生成で静的な形にする</p>\n</li>\n<li>\n<p>GithubPagesにホスティング</p>\n</li>\n</ol>\n<h2>引っかかった事</h2>\n<ul>\n<li>\n<p>Nuxt.jsわからん問題</p>\n<p>Vuexやnuxt.config.jsの記法等々で悩まされました。\bこれについては経験値をあげるしかない。</p>\n</li>\n<li>\n<p>GithubPagesへのデプロイ問題</p>\n<ul>\n<li>\n<p>何故かmanifest.js等々を読み込まん！</p>\n<p>build時に\bdistに作成される.nojekyllファイルが必要だったと\bいうたった1つの過ちに行き着くまでに軽く1,2時間は費やした。。。\b</p>\n<p>StackOverflowにそのままズバリなページがあって助かりました。\nhttps://stackoverflow.com/questions/49986185/github-pages-error</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Markdownのリンクが有効にならない</p>\n<p>この記事を書いてて気づいたのですが、リンクの記載があってもただの文字列として変換されてしまっていました。\nそして、processmdのオプションでpreset名を与えても有効にできる手段が見つからず。。</p>\n<p>結局レンダリング時にmarkdown-itを呼び直して自前でやっています。こんな感じに。</p>\n<pre><code class=\"hljs\">asyncData({params}){\n    <span class=\"hljs-keyword\">const</span> moduleUrl = params.path.replace(<span class=\"hljs-regexp\">/_/g</span>, <span class=\"hljs-string\">'/'</span>) + <span class=\"hljs-string\">'/'</span> + params.url;\n    <span class=\"hljs-keyword\">const</span> post = <span class=\"hljs-built_in\">Object</span>.assign({}, <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">`~/<span class=\"hljs-subst\">${moduleUrl}</span>.json`</span>), moduleUrl);\n    <span class=\"hljs-keyword\">const</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'markdown-it'</span>)({<span class=\"hljs-attr\">linkify</span>: <span class=\"hljs-literal\">true</span>}).use(<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'markdown-it-highlightjs'</span>));\n    post.parseHtml = md.render(post.bodyContent); <span class=\"hljs-comment\">// 意味ねぇ！</span>\n    <span class=\"hljs-keyword\">return</span> post;\n},</code></pre></li>\n</ul>\n<h2>今後の展望</h2>\n<ul>\n<li>\n<p>記事のカテゴリ化</p>\n<p>ページ右側が寂しいので、そこにカテゴリ一覧の表示をしたい</p>\n</li>\n<li>\n<p>記事の充実</p>\n<p>ソーシャル活動を今まで一切して来ていないせいで、記事を書く\b労力がすごい(語彙)。</p>\n</li>\n</ul>\n<h2>参考にさせて頂いたページ</h2>\n<ul>\n<li>https://jmblog.jp/posts/2018-01-17/build-a-blog-with-nuxtjs-and-markdown-1/</li>\n<li>https://qiita.com/ainehanta/items/8918593f3a28dfb25ddf</li>\n</ul>\n",
  "preview": "経緯\n\n技術ブログを以前から書いておきたいと思っていました。\n\nちょっと調べただけで素晴らしいサイト、仕組み(はてなブログやCMS、JekyllやHugoといったSSG等)は多数見つかったのですが、自分で１から作成したいと思い起ち、作成するに至りました。\n\n 何故思い起ったのか\n\nNuxt.jsに触れてみたかった\n\n    Javaのサーバサイドエンジニアなので意図して触れない限り疎遠なフロントエンドの世界。\n\n    最近様々なJSフレームワークが台頭してるようですが、その内の一つ、Vue.jsに触れたことがなかったので触ってみようと思った。\n\nサイトを1から組む体験がしたかった\n\n    レイアウトや仕組み等、1から自分で考えて作ったものでないと愛着がわかない性格なのと、自分で組み上げ、公開する体験がしたかったから。\n\n実現した事(当サイトの仕組み)\n\nMarkdownで記事を書く\n\n    processmdを使用しました。",
  "dir": "content/posts/tech",
  "base": "2018-06-16-about-this-site.json",
  "ext": ".json",
  "sourceBase": "2018-06-16-about-this-site.md",
  "sourceExt": ".md"
}